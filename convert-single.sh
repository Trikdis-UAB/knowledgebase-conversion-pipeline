#!/bin/bash
set -euo pipefail

# Document conversion pipeline for TRIKDIS manuals
#
# GitHub Alerts: This pipeline converts GitHub alerts (> [!NOTE], > [!IMPORTANT])
# from DOCX to markdown format. The target MkDocs site MUST have markdown-callouts
# extension configured to render these properly. See GITHUB_ALERTS_CONFIG.md for details.
#
# Table Structure: Automatically fixes malformed table structures from DOCX conversion
# including H1 tags in cells, rowspan issues, and empty rows. See TABLE_STRUCTURE_FIX.md
# for details. This ensures tables display properly with horizontal headers in MkDocs.

if [ $# -eq 0 ]; then
  echo "Usage: $0 <input.docx>"; exit 1
fi

OUT_DIR="${OUT_DIR:-docs/manuals}"

# Get absolute paths
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
inp="$(cd "$(dirname "$1")" && pwd)/$(basename "$1")"
base="$(basename "${inp%.docx}")"
doc_dir="${OUT_DIR}/${base}"

# Ensure filters exist
for f in strip-cover.lua strip-toc.lua promote-strong-top.lua normalize-headings.lua move-first-image-to-description.lua split-inline-images.lua convert-image-sizes.lua softwrap-tokens.lua clean-table-pipes.lua mark-two-col.lua convert-underline.lua remove-unwanted-blockquotes.lua maintain-list-continuity.lua strip-classes.lua fix-typography.lua fix-crossrefs.lua clean-html-blocks.lua; do
  [ -f "$SCRIPT_DIR/$f" ] || { echo "Missing $f"; exit 1; }
done
# Check the new filter in filters subdirectory
[ -f "$SCRIPT_DIR/filters/flatten-two-cell-tables.lua" ] || { echo "Missing filters/flatten-two-cell-tables.lua"; exit 1; }

mkdir -p "$doc_dir"
pushd "$doc_dir" >/dev/null

pandoc "$inp" \
  -o "index.md" \
  -t commonmark_x+pipe_tables+attributes \
  --extract-media="." \
  --wrap=none \
  --markdown-headings=atx \
  --lua-filter="$SCRIPT_DIR/strip-cover.lua" \
  --lua-filter="$SCRIPT_DIR/strip-toc.lua" \
  --lua-filter="$SCRIPT_DIR/promote-strong-top.lua" \
  --lua-filter="$SCRIPT_DIR/filters/flatten-two-cell-tables.lua" \
  --lua-filter="$SCRIPT_DIR/normalize-headings.lua" \
  --lua-filter="$SCRIPT_DIR/strip-manual-heading-numbers.lua" \
  --lua-filter="$SCRIPT_DIR/move-first-image-to-description.lua" \
  --lua-filter="$SCRIPT_DIR/split-inline-images.lua" \
  --lua-filter="$SCRIPT_DIR/convert-image-sizes.lua" \
  --lua-filter="$SCRIPT_DIR/softwrap-tokens.lua" \
  --lua-filter="$SCRIPT_DIR/clean-table-pipes.lua" \
  --lua-filter="$SCRIPT_DIR/mark-two-col.lua" \
  --lua-filter="$SCRIPT_DIR/convert-underline.lua" \
  --lua-filter="$SCRIPT_DIR/remove-unwanted-blockquotes.lua" \
  --lua-filter="$SCRIPT_DIR/maintain-list-continuity.lua" \
  --lua-filter="$SCRIPT_DIR/strip-classes.lua" \
  --lua-filter="$SCRIPT_DIR/fix-typography.lua" \
  --lua-filter="$SCRIPT_DIR/fix-crossrefs.lua" \
  --lua-filter="$SCRIPT_DIR/clean-html-blocks.lua"

# If Pandoc made ./media/, flatten to current folder and fix links
if [ -d "media" ]; then
  echo "  Flattening media folder..."
  shopt -s nullglob
  for f in media/*; do mv "$f" .; done
  rmdir media
  # Rewrite ](media/xxx) -> ](xxx) and src="./media/xxx" -> src="xxx"
  sed -i '' 's#](\./media/#](#g' index.md
  sed -i '' 's#](media/#](#g' index.md
  sed -i '' 's#src="\./media/#src="#g' index.md
  sed -i '' 's#src="media/#src="#g' index.md
  echo "  Fixed image paths"
fi

# Fix any remaining error references
sed -i '' 's/Error! Reference source not found\./see the referenced section/g' index.md

# Convert first markdown image to centered HTML with width=400 (before Description heading)
sed -i '' '1,/^## Description/{ s#^!\[GT Cellular Communicator\](./image1.png)$#<div style="text-align: center;">\n  <img src="./image1.png" alt="GT Cellular Communicator" width="400">\n</div>#; }' index.md

# Clean up blockquotes in tables
sed -i '' 's/<blockquote>//g; s/<\/blockquote>//g' index.md

# Fix HTML blocks with {=html} tags that prevent proper rendering in MkDocs
sed -i '' 's/`<img \([^`]*\)>`{=html}/<img \1>/g' index.md

# Fix underlined text with HTML tags to proper markdown underline
sed -i '' 's/`<u>`{=html}\([^`]*\)`<\/u>`{=html}/<u>\1<\/u>/g' index.md

# Fix escaped apostrophes in text (remove backslashes before single quotes)
sed -i '' "s/\\\\'/'/g" index.md

# Fix title formatting - make "Works with Protegus2 app:" bold like other titles
sed -i '' 's/^Works with Protegus2 app:/**Works with Protegus2 app:**/g' index.md

# Fix Features section structure - change from bold to H3 (subsection) and make first line bold
sed -i '' 's/^\*\*Features\*\*$/### Features/g' index.md
sed -i '' 's/^Connects to the control panel'\''s serial or keyboard bus or telephone line (TIP\/RING)\.$/\*\*Connects to the control panel'\''s serial or keyboard bus or telephone line (TIP\/RING).\*\*/g' index.md

# Note: H1 title is now automatically generated by promote-strong-top.lua filter
# It extracts the product name from the cover page and creates proper title

# Add centered product image after H1 title
sed -i '' '/^# .*Cellular Communicator$/a\
\
<div style="text-align: center;">\
  <img src="./image1.png" alt="Product Image" width="400">\
</div>
' index.md

# Fix GitHub-style alerts by removing backslash escaping from square brackets
sed -i '' 's/\\\[/[/g; s/\\\]/]/g' index.md

# Convert GitHub-style alerts to MkDocs admonitions format
sed -i '' 's/> \[!NOTE\]/!!! note/g' index.md
sed -i '' 's/> \[!IMPORTANT\]/!!! warning "Important"/g' index.md
sed -i '' 's/> \[!WARNING\]/!!! warning/g' index.md
sed -i '' 's/> \[!TIP\]/!!! tip/g' index.md
sed -i '' 's/> \[!CAUTION\]/!!! warning "Caution"/g' index.md

# Fix admonition formatting (proper indentation)
python3 "$SCRIPT_DIR/fix_admonitions.py" index.md

# Fix table structure issues (H1 in cells, empty rows, malformed headers)
python3 "$SCRIPT_DIR/fix_table_structure.py" index.md

python3 "$SCRIPT_DIR/normalize-callouts.py" index.md
python3 "$SCRIPT_DIR/fix-relative-images.py" index.md
python3 "$SCRIPT_DIR/fix-list-continuity.py" index.md
python3 "$SCRIPT_DIR/reduce-spacing.py" index.md

popd >/dev/null
echo "âœ… Wrote: ${doc_dir}/index.md (images in same folder)"